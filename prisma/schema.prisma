// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider = "mysql"
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model user {
  id            Int     @id @default(autoincrement())
  username      String
  display_name  String?
  email         String  @unique
  password      String
  refresh_token String? @db.Text

  feed    feed[]
  like    like_user[]
  comment comment_user[]
}

model feed {
  id          Int      @id @default(autoincrement())
  image       String
  address     String
  description String
  like_count  Int
  save_count  Int
  createdAt   DateTime @default(now())

  user_id Int
  user    user @relation(fields: [user_id], references: [id])

  comment comment_user[]
  like like_user[]
}

model like_user {
  id Int @id @default(autoincrement())

  isLike Boolean @default(false)

  user_id Int
  user    user @relation(fields: [user_id], references: [id])

  feed_id Int
  feed    feed @relation(fields: [feed_id], references: [id])

   @@unique([user_id, feed_id])
}

model comment_user {
  id            Int    @id @default(autoincrement())
  field_comment String
  like_count    Int

  user_id Int
  user    user @relation(fields: [user_id], references: [id])

  feed_id Int
  feed    feed @relation(fields: [feed_id], references: [id])
}
